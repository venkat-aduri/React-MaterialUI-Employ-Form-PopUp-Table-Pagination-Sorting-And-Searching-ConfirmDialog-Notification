[{"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\index.js":"1","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\App.js":"2","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\reportWebVitals.js":"3","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Input.js":"4","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Button.js":"5","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\Popup.js":"6","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Controls.js":"7","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\ActionButton.js":"8","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\useTable.js":"9","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\pages\\employees\\EmployeeForm.js":"10","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\Form.js":"11","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\useForm.js":"12","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\Notification.js":"13","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\ConfirmDialog.js":"14","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\RadioGroup.js":"15","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Select.js":"16","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Checkbox.js":"17","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\DatePicker.js":"18"},{"size":500,"mtime":1607667912246,"results":"19","hashOfConfig":"20"},{"size":6958,"mtime":1610359017188,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1607667912246,"results":"22","hashOfConfig":"20"},{"size":478,"mtime":1610261864379,"results":"23","hashOfConfig":"20"},{"size":739,"mtime":1610261847752,"results":"24","hashOfConfig":"20"},{"size":1382,"mtime":1610327501722,"results":"25","hashOfConfig":"20"},{"size":413,"mtime":1610280066018,"results":"26","hashOfConfig":"20"},{"size":875,"mtime":1610346649871,"results":"27","hashOfConfig":"20"},{"size":4159,"mtime":1610267419588,"results":"28","hashOfConfig":"20"},{"size":5580,"mtime":1610348297978,"results":"29","hashOfConfig":"20"},{"size":518,"mtime":1610346828433,"results":"30","hashOfConfig":"20"},{"size":743,"mtime":1610359249296,"results":"31","hashOfConfig":"20"},{"size":1005,"mtime":1610272285116,"results":"32","hashOfConfig":"20"},{"size":2248,"mtime":1610272375390,"results":"33","hashOfConfig":"20"},{"size":800,"mtime":1610279748810,"results":"34","hashOfConfig":"20"},{"size":919,"mtime":1610280003780,"results":"35","hashOfConfig":"20"},{"size":755,"mtime":1610279847169,"results":"36","hashOfConfig":"20"},{"size":816,"mtime":1610279938893,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"s6hjry",{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\index.js",[],["79","80"],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\App.js",["81","82","83","84"],"import './App.css';\nimport React, { useState } from 'react';\nimport useTable from './components/useTable';\nimport { Paper, TableBody, TableRow, TableCell, Toolbar, makeStyles, InputAdornment } from '@material-ui/core';\nimport Input from './components/controls/Input';\nimport { Search } from '@material-ui/icons';\nimport Button from './components/controls/Button';\nimport Popup from \"./components/Popup\";\nimport AddIcon from '@material-ui/icons/Add';\nimport EmployeeForm from './pages/employees/EmployeeForm';\nimport Notification from './components/Notification';\nimport ConfirmDialog from './components/ConfirmDialog';\nimport Controls from './components/controls/Controls';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme=>({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput:{\n    width : '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n}\n}));\n\nconst records1 = [\n\n  { id : 101, fullName : \"Hello_1\", email : \"email1@gmail.com\", department : \"Training\" },\n  { id : 102, fullName : \"Hello_2\", email : \"email2@gmail.com\", department : \"Training2\" },\n  { id : 103, fullName : \"Hello_3\", email : \"email3@gmail.com\", department : \"Training3\" },\n  { id : 104, fullName : \"Hello_4\", email : \"email4@gmail.com\", department : \"Training4\" },\n  { id : 105, fullName : \"Hello_5\", email : \"email5@gmail.com\", department : \"Training5\" },\n  { id : 106, fullName : \"Hello_6\", email : \"email6@gmail.com\", department : \"Training6\" },\n  { id : 107, fullName : \"Hello_7\", email : \"email7@gmail.com\", department : \"Training7\" },\n  { id : 108, fullName : \"Hello_8\", email : \"email8@gmail.com\", department : \"Training8\" }\n\n];\n\nconst headCells = [\n\n  { id : \"id\", label : \"ID\"},\n  { id : \"fullName\", label : \"Full Name\"},\n  { id : \"email\", label : \"Email (Personal)\"},\n  { id : \"department\", label : \"Department\"},\n  { id: 'actions', label: 'Actions', disableSorting: true }\n\n];\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [records, setRecords] = useState(records1);\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } });\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' });\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' });\n\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting } = useTable(records,headCells,filterFn);\n\n    const handleSearch = e => {\n      let target = e.target;\n      let searchString = target.value;\n      setFilterFn({\n          fn: items => {\n              if (searchString == \"\")\n                  return items;\n              else\n                  return items.filter(x =>( x.fullName.toLowerCase().includes(searchString.toLowerCase())\n                                        ||  x.email.toLowerCase().includes(searchString.toLowerCase())\n                                        ||  x.department.toLowerCase().includes(searchString.toLowerCase())\n                                        ||  x.id == searchString\n                  ))\n          }\n      })\n    };\n\n    const addOrEdit = (employee, resetForm) => {\n      if (employee.id == 0){\n\n      }\n         // employeeService.insertEmployee(employee)\n      else{\n\n      }\n         // employeeService.updateEmployee(employee)\n      resetForm()\n      setRecordForEdit(null)\n      setOpenPopup(false)\n      //setRecords(employeeService.getAllEmployees())\n      setNotify({\n          isOpen: true,\n          message: 'Submitted Successfully',\n          type: 'success'\n      })\n    };\n\n  const openInPopup = item => {\n      setRecordForEdit(item);\n      setOpenPopup(true);\n  };\n\n  const onDelete = id => {\n      setConfirmDialog({\n          ...confirmDialog,\n          isOpen: false\n      });\n      // employeeService.deleteEmployee(id);\n      // setRecords(employeeService.getAllEmployees());\n      setNotify({\n          isOpen: true,\n          message: 'Deleted Successfully',\n          type: 'error'\n      });\n  };\n\n  return (\n    <div >\n      <Paper className={classes.pageContent}>\n        <Toolbar>\n            <Input\n                label=\"Search Employees\"\n                className={classes.searchInput}\n                InputProps={{\n                    startAdornment: (<InputAdornment position=\"start\">\n                        <Search />\n                    </InputAdornment>)\n                }}\n                onChange={handleSearch}\n            />\n            <Button\n                text=\"Add New\"\n                variant=\"outlined\"\n                startIcon={<AddIcon />}\n                className={classes.newButton}\n                onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\n            />\n        </Toolbar>\n        <TblContainer>\n          <TblHead/>\n          <TableBody>\n            {\n              recordsAfterPagingAndSorting().map(record => (\n                <TableRow key={record.id}>\n                  <TableCell>{record.id}</TableCell>\n                  <TableCell>{record.fullName}</TableCell>\n                  <TableCell>{record.email}</TableCell>\n                  <TableCell>{record.department}</TableCell>\n                  <TableCell>\n                      <Controls.ActionButton\n                          color=\"primary\"\n                          onClick={() => { openInPopup(record) }}>\n                          <EditOutlinedIcon fontSize=\"small\" />\n                      </Controls.ActionButton>\n                      <Controls.ActionButton\n                          color=\"secondary\"\n                          onClick={() => {\n                              setConfirmDialog({\n                                  isOpen: true,\n                                  title: 'Are you sure to delete this record?',\n                                  subTitle: \"You can't undo this operation\",\n                                  onConfirm: () => { onDelete(record.id) }\n                              })\n                          }}>\n                          <CloseIcon fontSize=\"small\" />\n                      </Controls.ActionButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n\n          </TableBody> \n        </TblContainer>\n        <TblPagination/>\n      </Paper>\n      <Popup\n          title=\"Employee Form\"\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n      >\n          <EmployeeForm\n              recordForEdit={recordForEdit}\n              addOrEdit={addOrEdit} \n          />  \n      </Popup>\n      <Notification\n          notify={notify}\n          setNotify={setNotify}\n      />\n      <ConfirmDialog\n          confirmDialog={confirmDialog}\n          setConfirmDialog={setConfirmDialog}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\reportWebVitals.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Input.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Button.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\Popup.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Controls.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\ActionButton.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\useTable.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\pages\\employees\\EmployeeForm.js",["85"],"import { Grid } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport Controls from '../../components/controls/Controls';\r\nimport Form from '../../components/Form';\r\nimport useForm from '../../components/useForm';\r\n\r\nconst initialFValues = {\r\n    fullName : \" \",\r\n    id : \" \",\r\n    email : \" \",\r\n    mobile : \" \",\r\n    city : \" \",\r\n    gender : \" \",\r\n    departmentId : \" \",\r\n    hireDate : new Date(),\r\n    isPermanent : \" \"\r\n};\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst selectItems = [\r\n    { id: 111, title: \"Training\" },\r\n    { id: 222, title: \"Development\" },\r\n    { id: 333, title: \"Testing\" },\r\n    { id: 444, title: \"Production\" },\r\n    { id: 555, title: \"R&D\" }\r\n]\r\n\r\nfunction EmployeeForm(props){\r\n    \r\n    const { addOrEdit, recordForEdit } = props;\r\n\r\n    const validate = (fieldValues = values)=>{\r\n        const temp = {...errors};\r\n        if(\"fullName\" in fieldValues){\r\n            temp.fullName = fieldValues.fullName?\"\":\"FullName is required\";\r\n        }\r\n        if(\"id\" in fieldValues){\r\n            temp.id = fieldValues.id?\"\":\"ID is required\";\r\n        }\r\n        if(\"email\" in fieldValues){\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email)?\"\":\"Enter correct email\";\r\n        }\r\n        if(\"mobile\" in fieldValues){\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \" \" : \"Minimum 10 numbers required\";\r\n        }\r\n        if(\"city\" in fieldValues){\r\n            temp.city = fieldValues.city ? \" \" : \"City is required\";\r\n        }\r\n        if(\"departmentId\" in fieldValues){\r\n            temp.departmentId = fieldValues.departmentId ? \" \" : \"Department is required\";\r\n        }\r\n\r\n        setErrors({...temp});\r\n\r\n    };\r\n\r\n    const {values,\r\n           setValues,\r\n           errors,\r\n           setErrors,\r\n           handleInputChange,\r\n           resetForm } = useForm(initialFValues,true,validate);\r\n\r\n    const handleSubmit = (event)=> {\r\n        event.preventDefault();\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit]);\r\n\r\n    return(\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n            <Grid container>\r\n\r\n                <Grid item xs={6}>\r\n\r\n                    <Controls.Input\r\n                            name=\"id\"\r\n                            label=\"ID\"\r\n                            value={values.id}\r\n                            onChange={handleInputChange}\r\n                            error={errors.id}/>\r\n                    <Controls.Input\r\n                            name=\"fullName\"\r\n                            label=\"FullName\"\r\n                            value={values.fullName}\r\n                            onChange={handleInputChange}\r\n                            error={errors.fullName}/>\r\n                    <Controls.Input\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            value={values.email}\r\n                            onChange={handleInputChange}\r\n                            error={errors.email}/>\r\n                    <Controls.Input\r\n                            name=\"mobile\"\r\n                            label=\"Mobile\"\r\n                            value={values.mobile}\r\n                            onChange={handleInputChange}\r\n                            error={errors.mobile}/>\r\n                    <Controls.Input\r\n                            name=\"city\"\r\n                            label=\"City\"\r\n                            value={values.city}\r\n                            onChange={handleInputChange}\r\n                            error={errors.city}/>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    \r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={selectItems}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default EmployeeForm;","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\Form.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\useForm.js",["86"],"import React,{ useState } from \"react\";\r\n\r\nexport default function useForm(initialFValues,validateOnChange=false,validate){\r\n    const [values,setValues] = useState(initialFValues);\r\n    const [errors,setErrors] = useState({});\r\n\r\n    const handleInputChange = (event)=>{\r\n        const {name,value} = event.target;\r\n        setValues({\r\n            ...values,\r\n            [name] : value\r\n        });\r\n        if(validateOnChange){\r\n            validate({[name]:value});\r\n        };\r\n    };\r\n\r\n    const resetForm = (event)=>{\r\n        setValues(initialFValues);\r\n        setErrors({});\r\n    };\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    }\r\n};","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\Notification.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\ConfirmDialog.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\RadioGroup.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Select.js",[],["87","88"],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\Checkbox.js",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice-Apps\\react-material-ui-table-app\\src\\components\\controls\\DatePicker.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":60,"column":19,"nodeType":"95","messageId":"96","endLine":60,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":78,"column":32,"nodeType":"99","messageId":"100","endLine":78,"endColumn":34},{"ruleId":"97","severity":1,"message":"98","line":84,"column":50,"nodeType":"99","messageId":"100","endLine":84,"endColumn":52},{"ruleId":"97","severity":1,"message":"98","line":91,"column":23,"nodeType":"99","messageId":"100","endLine":91,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":81,"column":8,"nodeType":"103","endLine":81,"endColumn":23,"suggestions":"104"},{"ruleId":"93","severity":1,"message":"105","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"89","replacedBy":"106"},{"ruleId":"91","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'setRecords' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'React' is defined but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"113","text":"114"},[2294,2309],"[recordForEdit, setValues]"]